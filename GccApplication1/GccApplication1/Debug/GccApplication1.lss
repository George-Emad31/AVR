
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000704  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000704  00000778  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000788  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000007b8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001512  00000000  00000000  000008fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008ea  00000000  00000000  00001e0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a48  00000000  00000000  000026f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f4  00000000  00000000  00003140  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000517  00000000  00000000  00003334  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000bc6  00000000  00000000  0000384b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  00004411  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e0       	ldi	r30, 0x04	; 4
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <main>
  7a:	0c 94 80 03 	jmp	0x700	; 0x700 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_vsetPINDir>:
	DIO_write(portname,5,READ_BIT(numberValue,5));
	DIO_write(portname,6,READ_BIT(numberValue,6));
	DIO_write(portname,7,READ_BIT(numberValue,7));
	
	
}
  82:	82 34       	cpi	r24, 0x42	; 66
  84:	19 f1       	breq	.+70     	; 0xcc <DIO_vsetPINDir+0x4a>
  86:	18 f4       	brcc	.+6      	; 0x8e <DIO_vsetPINDir+0xc>
  88:	81 34       	cpi	r24, 0x41	; 65
  8a:	39 f0       	breq	.+14     	; 0x9a <DIO_vsetPINDir+0x18>
  8c:	08 95       	ret
  8e:	83 34       	cpi	r24, 0x43	; 67
  90:	b1 f1       	breq	.+108    	; 0xfe <DIO_vsetPINDir+0x7c>
  92:	84 34       	cpi	r24, 0x44	; 68
  94:	09 f4       	brne	.+2      	; 0x98 <DIO_vsetPINDir+0x16>
  96:	4c c0       	rjmp	.+152    	; 0x130 <DIO_vsetPINDir+0xae>
  98:	08 95       	ret
  9a:	41 30       	cpi	r20, 0x01	; 1
  9c:	59 f4       	brne	.+22     	; 0xb4 <DIO_vsetPINDir+0x32>
  9e:	2a b3       	in	r18, 0x1a	; 26
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	02 c0       	rjmp	.+4      	; 0xaa <DIO_vsetPINDir+0x28>
  a6:	88 0f       	add	r24, r24
  a8:	99 1f       	adc	r25, r25
  aa:	6a 95       	dec	r22
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <DIO_vsetPINDir+0x24>
  ae:	82 2b       	or	r24, r18
  b0:	8a bb       	out	0x1a, r24	; 26
  b2:	08 95       	ret
  b4:	2a b3       	in	r18, 0x1a	; 26
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <DIO_vsetPINDir+0x3e>
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	6a 95       	dec	r22
  c2:	e2 f7       	brpl	.-8      	; 0xbc <DIO_vsetPINDir+0x3a>
  c4:	80 95       	com	r24
  c6:	82 23       	and	r24, r18
  c8:	8a bb       	out	0x1a, r24	; 26
  ca:	08 95       	ret
  cc:	41 30       	cpi	r20, 0x01	; 1
  ce:	59 f4       	brne	.+22     	; 0xe6 <DIO_vsetPINDir+0x64>
  d0:	27 b3       	in	r18, 0x17	; 23
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	02 c0       	rjmp	.+4      	; 0xdc <DIO_vsetPINDir+0x5a>
  d8:	88 0f       	add	r24, r24
  da:	99 1f       	adc	r25, r25
  dc:	6a 95       	dec	r22
  de:	e2 f7       	brpl	.-8      	; 0xd8 <DIO_vsetPINDir+0x56>
  e0:	82 2b       	or	r24, r18
  e2:	87 bb       	out	0x17, r24	; 23
  e4:	08 95       	ret
  e6:	27 b3       	in	r18, 0x17	; 23
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <DIO_vsetPINDir+0x70>
  ee:	88 0f       	add	r24, r24
  f0:	99 1f       	adc	r25, r25
  f2:	6a 95       	dec	r22
  f4:	e2 f7       	brpl	.-8      	; 0xee <DIO_vsetPINDir+0x6c>
  f6:	80 95       	com	r24
  f8:	82 23       	and	r24, r18
  fa:	87 bb       	out	0x17, r24	; 23
  fc:	08 95       	ret
  fe:	41 30       	cpi	r20, 0x01	; 1
 100:	59 f4       	brne	.+22     	; 0x118 <DIO_vsetPINDir+0x96>
 102:	24 b3       	in	r18, 0x14	; 20
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	02 c0       	rjmp	.+4      	; 0x10e <DIO_vsetPINDir+0x8c>
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	6a 95       	dec	r22
 110:	e2 f7       	brpl	.-8      	; 0x10a <DIO_vsetPINDir+0x88>
 112:	82 2b       	or	r24, r18
 114:	84 bb       	out	0x14, r24	; 20
 116:	08 95       	ret
 118:	24 b3       	in	r18, 0x14	; 20
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_vsetPINDir+0xa2>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_vsetPINDir+0x9e>
 128:	80 95       	com	r24
 12a:	82 23       	and	r24, r18
 12c:	84 bb       	out	0x14, r24	; 20
 12e:	08 95       	ret
 130:	41 30       	cpi	r20, 0x01	; 1
 132:	59 f4       	brne	.+22     	; 0x14a <DIO_vsetPINDir+0xc8>
 134:	21 b3       	in	r18, 0x11	; 17
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_vsetPINDir+0xbe>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_vsetPINDir+0xba>
 144:	82 2b       	or	r24, r18
 146:	81 bb       	out	0x11, r24	; 17
 148:	08 95       	ret
 14a:	21 b3       	in	r18, 0x11	; 17
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_vsetPINDir+0xd4>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_vsetPINDir+0xd0>
 15a:	80 95       	com	r24
 15c:	82 23       	and	r24, r18
 15e:	81 bb       	out	0x11, r24	; 17
 160:	08 95       	ret

00000162 <DIO_write>:
 162:	82 34       	cpi	r24, 0x42	; 66
 164:	19 f1       	breq	.+70     	; 0x1ac <DIO_write+0x4a>
 166:	18 f4       	brcc	.+6      	; 0x16e <DIO_write+0xc>
 168:	81 34       	cpi	r24, 0x41	; 65
 16a:	39 f0       	breq	.+14     	; 0x17a <DIO_write+0x18>
 16c:	08 95       	ret
 16e:	83 34       	cpi	r24, 0x43	; 67
 170:	b1 f1       	breq	.+108    	; 0x1de <DIO_write+0x7c>
 172:	84 34       	cpi	r24, 0x44	; 68
 174:	09 f4       	brne	.+2      	; 0x178 <DIO_write+0x16>
 176:	4c c0       	rjmp	.+152    	; 0x210 <DIO_write+0xae>
 178:	08 95       	ret
 17a:	41 30       	cpi	r20, 0x01	; 1
 17c:	59 f4       	brne	.+22     	; 0x194 <DIO_write+0x32>
 17e:	2b b3       	in	r18, 0x1b	; 27
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_write+0x28>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_write+0x24>
 18e:	82 2b       	or	r24, r18
 190:	8b bb       	out	0x1b, r24	; 27
 192:	08 95       	ret
 194:	2b b3       	in	r18, 0x1b	; 27
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_write+0x3e>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_write+0x3a>
 1a4:	80 95       	com	r24
 1a6:	82 23       	and	r24, r18
 1a8:	8b bb       	out	0x1b, r24	; 27
 1aa:	08 95       	ret
 1ac:	41 30       	cpi	r20, 0x01	; 1
 1ae:	59 f4       	brne	.+22     	; 0x1c6 <DIO_write+0x64>
 1b0:	28 b3       	in	r18, 0x18	; 24
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <DIO_write+0x5a>
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	6a 95       	dec	r22
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <DIO_write+0x56>
 1c0:	82 2b       	or	r24, r18
 1c2:	88 bb       	out	0x18, r24	; 24
 1c4:	08 95       	ret
 1c6:	28 b3       	in	r18, 0x18	; 24
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <DIO_write+0x70>
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	6a 95       	dec	r22
 1d4:	e2 f7       	brpl	.-8      	; 0x1ce <DIO_write+0x6c>
 1d6:	80 95       	com	r24
 1d8:	82 23       	and	r24, r18
 1da:	88 bb       	out	0x18, r24	; 24
 1dc:	08 95       	ret
 1de:	41 30       	cpi	r20, 0x01	; 1
 1e0:	59 f4       	brne	.+22     	; 0x1f8 <DIO_write+0x96>
 1e2:	25 b3       	in	r18, 0x15	; 21
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <DIO_write+0x8c>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	6a 95       	dec	r22
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <DIO_write+0x88>
 1f2:	82 2b       	or	r24, r18
 1f4:	85 bb       	out	0x15, r24	; 21
 1f6:	08 95       	ret
 1f8:	25 b3       	in	r18, 0x15	; 21
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_write+0xa2>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_write+0x9e>
 208:	80 95       	com	r24
 20a:	82 23       	and	r24, r18
 20c:	85 bb       	out	0x15, r24	; 21
 20e:	08 95       	ret
 210:	41 30       	cpi	r20, 0x01	; 1
 212:	59 f4       	brne	.+22     	; 0x22a <DIO_write+0xc8>
 214:	22 b3       	in	r18, 0x12	; 18
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_write+0xbe>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_write+0xba>
 224:	82 2b       	or	r24, r18
 226:	82 bb       	out	0x12, r24	; 18
 228:	08 95       	ret
 22a:	22 b3       	in	r18, 0x12	; 18
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_write+0xd4>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_write+0xd0>
 23a:	80 95       	com	r24
 23c:	82 23       	and	r24, r18
 23e:	82 bb       	out	0x12, r24	; 18
 240:	08 95       	ret

00000242 <DIO_u8read>:
 242:	82 34       	cpi	r24, 0x42	; 66
 244:	e9 f0       	breq	.+58     	; 0x280 <DIO_u8read+0x3e>
 246:	18 f4       	brcc	.+6      	; 0x24e <DIO_u8read+0xc>
 248:	81 34       	cpi	r24, 0x41	; 65
 24a:	31 f0       	breq	.+12     	; 0x258 <DIO_u8read+0x16>
 24c:	55 c0       	rjmp	.+170    	; 0x2f8 <DIO_u8read+0xb6>
 24e:	83 34       	cpi	r24, 0x43	; 67
 250:	59 f1       	breq	.+86     	; 0x2a8 <DIO_u8read+0x66>
 252:	84 34       	cpi	r24, 0x44	; 68
 254:	e9 f1       	breq	.+122    	; 0x2d0 <DIO_u8read+0x8e>
 256:	50 c0       	rjmp	.+160    	; 0x2f8 <DIO_u8read+0xb6>
 258:	49 b3       	in	r20, 0x19	; 25
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	9c 01       	movw	r18, r24
 260:	06 2e       	mov	r0, r22
 262:	02 c0       	rjmp	.+4      	; 0x268 <DIO_u8read+0x26>
 264:	22 0f       	add	r18, r18
 266:	33 1f       	adc	r19, r19
 268:	0a 94       	dec	r0
 26a:	e2 f7       	brpl	.-8      	; 0x264 <DIO_u8read+0x22>
 26c:	84 2f       	mov	r24, r20
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	82 23       	and	r24, r18
 272:	93 23       	and	r25, r19
 274:	02 c0       	rjmp	.+4      	; 0x27a <DIO_u8read+0x38>
 276:	95 95       	asr	r25
 278:	87 95       	ror	r24
 27a:	6a 95       	dec	r22
 27c:	e2 f7       	brpl	.-8      	; 0x276 <DIO_u8read+0x34>
 27e:	08 95       	ret
 280:	46 b3       	in	r20, 0x16	; 22
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	9c 01       	movw	r18, r24
 288:	06 2e       	mov	r0, r22
 28a:	02 c0       	rjmp	.+4      	; 0x290 <DIO_u8read+0x4e>
 28c:	22 0f       	add	r18, r18
 28e:	33 1f       	adc	r19, r19
 290:	0a 94       	dec	r0
 292:	e2 f7       	brpl	.-8      	; 0x28c <DIO_u8read+0x4a>
 294:	84 2f       	mov	r24, r20
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	82 23       	and	r24, r18
 29a:	93 23       	and	r25, r19
 29c:	02 c0       	rjmp	.+4      	; 0x2a2 <DIO_u8read+0x60>
 29e:	95 95       	asr	r25
 2a0:	87 95       	ror	r24
 2a2:	6a 95       	dec	r22
 2a4:	e2 f7       	brpl	.-8      	; 0x29e <DIO_u8read+0x5c>
 2a6:	08 95       	ret
 2a8:	43 b3       	in	r20, 0x13	; 19
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	9c 01       	movw	r18, r24
 2b0:	06 2e       	mov	r0, r22
 2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <DIO_u8read+0x76>
 2b4:	22 0f       	add	r18, r18
 2b6:	33 1f       	adc	r19, r19
 2b8:	0a 94       	dec	r0
 2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <DIO_u8read+0x72>
 2bc:	84 2f       	mov	r24, r20
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	82 23       	and	r24, r18
 2c2:	93 23       	and	r25, r19
 2c4:	02 c0       	rjmp	.+4      	; 0x2ca <DIO_u8read+0x88>
 2c6:	95 95       	asr	r25
 2c8:	87 95       	ror	r24
 2ca:	6a 95       	dec	r22
 2cc:	e2 f7       	brpl	.-8      	; 0x2c6 <DIO_u8read+0x84>
 2ce:	08 95       	ret
 2d0:	40 b3       	in	r20, 0x10	; 16
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	9c 01       	movw	r18, r24
 2d8:	06 2e       	mov	r0, r22
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <DIO_u8read+0x9e>
 2dc:	22 0f       	add	r18, r18
 2de:	33 1f       	adc	r19, r19
 2e0:	0a 94       	dec	r0
 2e2:	e2 f7       	brpl	.-8      	; 0x2dc <DIO_u8read+0x9a>
 2e4:	84 2f       	mov	r24, r20
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	82 23       	and	r24, r18
 2ea:	93 23       	and	r25, r19
 2ec:	02 c0       	rjmp	.+4      	; 0x2f2 <DIO_u8read+0xb0>
 2ee:	95 95       	asr	r25
 2f0:	87 95       	ror	r24
 2f2:	6a 95       	dec	r22
 2f4:	e2 f7       	brpl	.-8      	; 0x2ee <DIO_u8read+0xac>
 2f6:	08 95       	ret
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	08 95       	ret

000002fc <DIO_vconnectpullup>:
 2fc:	82 34       	cpi	r24, 0x42	; 66
 2fe:	19 f1       	breq	.+70     	; 0x346 <DIO_vconnectpullup+0x4a>
 300:	18 f4       	brcc	.+6      	; 0x308 <DIO_vconnectpullup+0xc>
 302:	81 34       	cpi	r24, 0x41	; 65
 304:	39 f0       	breq	.+14     	; 0x314 <DIO_vconnectpullup+0x18>
 306:	08 95       	ret
 308:	83 34       	cpi	r24, 0x43	; 67
 30a:	b1 f1       	breq	.+108    	; 0x378 <DIO_vconnectpullup+0x7c>
 30c:	84 34       	cpi	r24, 0x44	; 68
 30e:	09 f4       	brne	.+2      	; 0x312 <DIO_vconnectpullup+0x16>
 310:	4c c0       	rjmp	.+152    	; 0x3aa <DIO_vconnectpullup+0xae>
 312:	08 95       	ret
 314:	41 30       	cpi	r20, 0x01	; 1
 316:	59 f4       	brne	.+22     	; 0x32e <DIO_vconnectpullup+0x32>
 318:	2b b3       	in	r18, 0x1b	; 27
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	02 c0       	rjmp	.+4      	; 0x324 <DIO_vconnectpullup+0x28>
 320:	88 0f       	add	r24, r24
 322:	99 1f       	adc	r25, r25
 324:	6a 95       	dec	r22
 326:	e2 f7       	brpl	.-8      	; 0x320 <DIO_vconnectpullup+0x24>
 328:	82 2b       	or	r24, r18
 32a:	8b bb       	out	0x1b, r24	; 27
 32c:	08 95       	ret
 32e:	2b b3       	in	r18, 0x1b	; 27
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	02 c0       	rjmp	.+4      	; 0x33a <DIO_vconnectpullup+0x3e>
 336:	88 0f       	add	r24, r24
 338:	99 1f       	adc	r25, r25
 33a:	6a 95       	dec	r22
 33c:	e2 f7       	brpl	.-8      	; 0x336 <DIO_vconnectpullup+0x3a>
 33e:	80 95       	com	r24
 340:	82 23       	and	r24, r18
 342:	8b bb       	out	0x1b, r24	; 27
 344:	08 95       	ret
 346:	41 30       	cpi	r20, 0x01	; 1
 348:	59 f4       	brne	.+22     	; 0x360 <DIO_vconnectpullup+0x64>
 34a:	28 b3       	in	r18, 0x18	; 24
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	02 c0       	rjmp	.+4      	; 0x356 <DIO_vconnectpullup+0x5a>
 352:	88 0f       	add	r24, r24
 354:	99 1f       	adc	r25, r25
 356:	6a 95       	dec	r22
 358:	e2 f7       	brpl	.-8      	; 0x352 <DIO_vconnectpullup+0x56>
 35a:	82 2b       	or	r24, r18
 35c:	88 bb       	out	0x18, r24	; 24
 35e:	08 95       	ret
 360:	28 b3       	in	r18, 0x18	; 24
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	02 c0       	rjmp	.+4      	; 0x36c <DIO_vconnectpullup+0x70>
 368:	88 0f       	add	r24, r24
 36a:	99 1f       	adc	r25, r25
 36c:	6a 95       	dec	r22
 36e:	e2 f7       	brpl	.-8      	; 0x368 <DIO_vconnectpullup+0x6c>
 370:	80 95       	com	r24
 372:	82 23       	and	r24, r18
 374:	88 bb       	out	0x18, r24	; 24
 376:	08 95       	ret
 378:	41 30       	cpi	r20, 0x01	; 1
 37a:	59 f4       	brne	.+22     	; 0x392 <DIO_vconnectpullup+0x96>
 37c:	25 b3       	in	r18, 0x15	; 21
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	02 c0       	rjmp	.+4      	; 0x388 <DIO_vconnectpullup+0x8c>
 384:	88 0f       	add	r24, r24
 386:	99 1f       	adc	r25, r25
 388:	6a 95       	dec	r22
 38a:	e2 f7       	brpl	.-8      	; 0x384 <DIO_vconnectpullup+0x88>
 38c:	82 2b       	or	r24, r18
 38e:	85 bb       	out	0x15, r24	; 21
 390:	08 95       	ret
 392:	25 b3       	in	r18, 0x15	; 21
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	02 c0       	rjmp	.+4      	; 0x39e <DIO_vconnectpullup+0xa2>
 39a:	88 0f       	add	r24, r24
 39c:	99 1f       	adc	r25, r25
 39e:	6a 95       	dec	r22
 3a0:	e2 f7       	brpl	.-8      	; 0x39a <DIO_vconnectpullup+0x9e>
 3a2:	80 95       	com	r24
 3a4:	82 23       	and	r24, r18
 3a6:	85 bb       	out	0x15, r24	; 21
 3a8:	08 95       	ret
 3aa:	41 30       	cpi	r20, 0x01	; 1
 3ac:	59 f4       	brne	.+22     	; 0x3c4 <DIO_vconnectpullup+0xc8>
 3ae:	22 b3       	in	r18, 0x12	; 18
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	02 c0       	rjmp	.+4      	; 0x3ba <DIO_vconnectpullup+0xbe>
 3b6:	88 0f       	add	r24, r24
 3b8:	99 1f       	adc	r25, r25
 3ba:	6a 95       	dec	r22
 3bc:	e2 f7       	brpl	.-8      	; 0x3b6 <DIO_vconnectpullup+0xba>
 3be:	82 2b       	or	r24, r18
 3c0:	82 bb       	out	0x12, r24	; 18
 3c2:	08 95       	ret
 3c4:	22 b3       	in	r18, 0x12	; 18
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	02 c0       	rjmp	.+4      	; 0x3d0 <DIO_vconnectpullup+0xd4>
 3cc:	88 0f       	add	r24, r24
 3ce:	99 1f       	adc	r25, r25
 3d0:	6a 95       	dec	r22
 3d2:	e2 f7       	brpl	.-8      	; 0x3cc <DIO_vconnectpullup+0xd0>
 3d4:	80 95       	com	r24
 3d6:	82 23       	and	r24, r18
 3d8:	82 bb       	out	0x12, r24	; 18
 3da:	08 95       	ret

000003dc <write_high_nibble>:
void write_high_nibble(unsigned char portname,unsigned char numberValue)
{
	numberValue<<=4;
 3dc:	62 95       	swap	r22
 3de:	60 7f       	andi	r22, 0xF0	; 240
	switch(portname)
 3e0:	82 34       	cpi	r24, 0x42	; 66
 3e2:	79 f0       	breq	.+30     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3e4:	18 f4       	brcc	.+6      	; 0x3ec <write_high_nibble+0x10>
 3e6:	81 34       	cpi	r24, 0x41	; 65
 3e8:	31 f0       	breq	.+12     	; 0x3f6 <write_high_nibble+0x1a>
 3ea:	08 95       	ret
 3ec:	83 34       	cpi	r24, 0x43	; 67
 3ee:	79 f0       	breq	.+30     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 3f0:	84 34       	cpi	r24, 0x44	; 68
 3f2:	99 f0       	breq	.+38     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 3f4:	08 95       	ret
	{
		case 'A':
		PORTA&=0x0f;
 3f6:	8b b3       	in	r24, 0x1b	; 27
 3f8:	8f 70       	andi	r24, 0x0F	; 15
 3fa:	8b bb       	out	0x1b, r24	; 27
		PORTA|=numberValue;
 3fc:	8b b3       	in	r24, 0x1b	; 27
 3fe:	86 2b       	or	r24, r22
 400:	8b bb       	out	0x1b, r24	; 27
		case 'B':
		PORTB&=0x0f;
 402:	88 b3       	in	r24, 0x18	; 24
 404:	8f 70       	andi	r24, 0x0F	; 15
 406:	88 bb       	out	0x18, r24	; 24
		PORTB|=numberValue;
 408:	88 b3       	in	r24, 0x18	; 24
 40a:	86 2b       	or	r24, r22
 40c:	88 bb       	out	0x18, r24	; 24
		case 'C':
		PORTC&=0x0f;
 40e:	85 b3       	in	r24, 0x15	; 21
 410:	8f 70       	andi	r24, 0x0F	; 15
 412:	85 bb       	out	0x15, r24	; 21
		PORTC|=numberValue;
 414:	85 b3       	in	r24, 0x15	; 21
 416:	86 2b       	or	r24, r22
 418:	85 bb       	out	0x15, r24	; 21
		case 'D':
		PORTD&=0x0f;
 41a:	82 b3       	in	r24, 0x12	; 18
 41c:	8f 70       	andi	r24, 0x0F	; 15
 41e:	82 bb       	out	0x12, r24	; 18
		PORTD|=numberValue;
 420:	82 b3       	in	r24, 0x12	; 18
 422:	68 2b       	or	r22, r24
 424:	62 bb       	out	0x12, r22	; 18
 426:	08 95       	ret

00000428 <keypad_vInit>:
 #include "keypad_driver.h"
 #define KPD_ROWS_PORT 'D'
 #define KPD_COLS_PORT 'D'
 void keypad_vInit()
 {    // ROWS  -> OUTPUT 
	 DIO_vsetPINDir(KPD_ROWS_PORT,KPD_ROW0_PIN,DIO_PIN_OUTPUT);
 428:	41 e0       	ldi	r20, 0x01	; 1
 42a:	60 e0       	ldi	r22, 0x00	; 0
 42c:	84 e4       	ldi	r24, 0x44	; 68
 42e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	 DIO_vsetPINDir(KPD_ROWS_PORT,KPD_ROW1_PIN,DIO_PIN_OUTPUT);
 432:	41 e0       	ldi	r20, 0x01	; 1
 434:	61 e0       	ldi	r22, 0x01	; 1
 436:	84 e4       	ldi	r24, 0x44	; 68
 438:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	 DIO_vsetPINDir(KPD_ROWS_PORT,KPD_ROW2_PIN,DIO_PIN_OUTPUT);
 43c:	41 e0       	ldi	r20, 0x01	; 1
 43e:	62 e0       	ldi	r22, 0x02	; 2
 440:	84 e4       	ldi	r24, 0x44	; 68
 442:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	 DIO_vsetPINDir(KPD_ROWS_PORT,KPD_ROW3_PIN,DIO_PIN_OUTPUT);
 446:	41 e0       	ldi	r20, 0x01	; 1
 448:	63 e0       	ldi	r22, 0x03	; 3
 44a:	84 e4       	ldi	r24, 0x44	; 68
 44c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	 // COL -> INPUT
	 DIO_vsetPINDir(KPD_COLS_PORT,KPD_COL0_PIN,DIO_PIN_INPUT);
 450:	40 e0       	ldi	r20, 0x00	; 0
 452:	64 e0       	ldi	r22, 0x04	; 4
 454:	84 e4       	ldi	r24, 0x44	; 68
 456:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	 DIO_vsetPINDir(KPD_COLS_PORT,KPD_COL1_PIN,DIO_PIN_INPUT);
 45a:	40 e0       	ldi	r20, 0x00	; 0
 45c:	65 e0       	ldi	r22, 0x05	; 5
 45e:	84 e4       	ldi	r24, 0x44	; 68
 460:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	 DIO_vsetPINDir(KPD_COLS_PORT,KPD_COL2_PIN,DIO_PIN_INPUT);
 464:	40 e0       	ldi	r20, 0x00	; 0
 466:	66 e0       	ldi	r22, 0x06	; 6
 468:	84 e4       	ldi	r24, 0x44	; 68
 46a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	 DIO_vsetPINDir(KPD_COLS_PORT,KPD_COL3_PIN,DIO_PIN_INPUT);
 46e:	40 e0       	ldi	r20, 0x00	; 0
 470:	67 e0       	ldi	r22, 0x07	; 7
 472:	84 e4       	ldi	r24, 0x44	; 68
 474:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	 // COL -> INPUT + ACTIVE INTERNAL PULLUP
	 DIO_vconnectpullup(KPD_COLS_PORT,KPD_COL0_PIN,DIO_PIN_HIGH);
 478:	41 e0       	ldi	r20, 0x01	; 1
 47a:	64 e0       	ldi	r22, 0x04	; 4
 47c:	84 e4       	ldi	r24, 0x44	; 68
 47e:	0e 94 7e 01 	call	0x2fc	; 0x2fc <DIO_vconnectpullup>
	 DIO_vconnectpullup(KPD_COLS_PORT,KPD_COL1_PIN,DIO_PIN_HIGH);
 482:	41 e0       	ldi	r20, 0x01	; 1
 484:	65 e0       	ldi	r22, 0x05	; 5
 486:	84 e4       	ldi	r24, 0x44	; 68
 488:	0e 94 7e 01 	call	0x2fc	; 0x2fc <DIO_vconnectpullup>
	 DIO_vconnectpullup(KPD_COLS_PORT,KPD_COL2_PIN,DIO_PIN_HIGH);
 48c:	41 e0       	ldi	r20, 0x01	; 1
 48e:	66 e0       	ldi	r22, 0x06	; 6
 490:	84 e4       	ldi	r24, 0x44	; 68
 492:	0e 94 7e 01 	call	0x2fc	; 0x2fc <DIO_vconnectpullup>
	 DIO_vconnectpullup(KPD_COLS_PORT,KPD_COL3_PIN,DIO_PIN_HIGH);
 496:	41 e0       	ldi	r20, 0x01	; 1
 498:	67 e0       	ldi	r22, 0x07	; 7
 49a:	84 e4       	ldi	r24, 0x44	; 68
 49c:	0e 94 7e 01 	call	0x2fc	; 0x2fc <DIO_vconnectpullup>
 4a0:	08 95       	ret

000004a2 <keypad_u8check_press>:
	  
 }
 u8 keypad_u8check_press()
{
 4a2:	ff 92       	push	r15
 4a4:	0f 93       	push	r16
 4a6:	1f 93       	push	r17
 4a8:	cf 93       	push	r28
 4aa:	df 93       	push	r29
 4ac:	cd b7       	in	r28, 0x3d	; 61
 4ae:	de b7       	in	r29, 0x3e	; 62
 4b0:	60 97       	sbiw	r28, 0x10	; 16
 4b2:	0f b6       	in	r0, 0x3f	; 63
 4b4:	f8 94       	cli
 4b6:	de bf       	out	0x3e, r29	; 62
 4b8:	0f be       	out	0x3f, r0	; 63
 4ba:	cd bf       	out	0x3d, r28	; 61
	 u8 arr[4][4]={{'7','8','9','/'},{'4','5','6','*'},{'1','2','3','-'},{'A','0','=','+'}};
 4bc:	80 e1       	ldi	r24, 0x10	; 16
 4be:	e0 e6       	ldi	r30, 0x60	; 96
 4c0:	f0 e0       	ldi	r31, 0x00	; 0
 4c2:	de 01       	movw	r26, r28
 4c4:	11 96       	adiw	r26, 0x01	; 1
 4c6:	01 90       	ld	r0, Z+
 4c8:	0d 92       	st	X+, r0
 4ca:	8a 95       	dec	r24
 4cc:	e1 f7       	brne	.-8      	; 0x4c6 <keypad_u8check_press+0x24>
	 u8 row,coloumn;
	// u8 x;
	 u8 returnval=NOTPRESSED;
 4ce:	ff 24       	eor	r15, r15
 4d0:	fa 94       	dec	r15
	 for(row=0;row<=3;row++)
 4d2:	00 e0       	ldi	r16, 0x00	; 0
 4d4:	38 c0       	rjmp	.+112    	; 0x546 <keypad_u8check_press+0xa4>
	 {   // ROWS  -> OUTPUT WITH LOGIC 1
		DIO_write(KPD_ROWS_PORT,KPD_ROW0_PIN,DIO_PIN_HIGH);
 4d6:	41 e0       	ldi	r20, 0x01	; 1
 4d8:	60 e0       	ldi	r22, 0x00	; 0
 4da:	84 e4       	ldi	r24, 0x44	; 68
 4dc:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
		DIO_write(KPD_ROWS_PORT,KPD_ROW1_PIN,DIO_PIN_HIGH);
 4e0:	41 e0       	ldi	r20, 0x01	; 1
 4e2:	61 e0       	ldi	r22, 0x01	; 1
 4e4:	84 e4       	ldi	r24, 0x44	; 68
 4e6:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
		DIO_write(KPD_ROWS_PORT,KPD_ROW2_PIN,DIO_PIN_HIGH);
 4ea:	41 e0       	ldi	r20, 0x01	; 1
 4ec:	62 e0       	ldi	r22, 0x02	; 2
 4ee:	84 e4       	ldi	r24, 0x44	; 68
 4f0:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
		DIO_write(KPD_ROWS_PORT,KPD_ROW3_PIN,DIO_PIN_HIGH);
 4f4:	41 e0       	ldi	r20, 0x01	; 1
 4f6:	63 e0       	ldi	r22, 0x03	; 3
 4f8:	84 e4       	ldi	r24, 0x44	; 68
 4fa:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
		// INTIRATION FOR ROW CHECK
		DIO_write(KPD_ROWS_PORT,row,DIO_PIN_LOW);
 4fe:	40 e0       	ldi	r20, 0x00	; 0
 500:	60 2f       	mov	r22, r16
 502:	84 e4       	ldi	r24, 0x44	; 68
 504:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	
		for(coloumn=0;coloumn<=3;coloumn++)
 508:	10 e0       	ldi	r17, 0x00	; 0
 50a:	18 c0       	rjmp	.+48     	; 0x53c <keypad_u8check_press+0x9a>
		{
			//x=DIO_u8read('D',(coloumn+KPD_COL0_PIN)); 
			// IF THE PIN OF FIRST COL IS CONNECTED FROM PIN 4 IF NOT IT WILL + 0
			if(DIO_u8read(KPD_COLS_PORT,(coloumn+KPD_COL0_PIN))==PRESSED)
 50c:	64 e0       	ldi	r22, 0x04	; 4
 50e:	61 0f       	add	r22, r17
 510:	84 e4       	ldi	r24, 0x44	; 68
 512:	0e 94 21 01 	call	0x242	; 0x242 <DIO_u8read>
 516:	81 11       	cpse	r24, r1
 518:	10 c0       	rjmp	.+32     	; 0x53a <keypad_u8check_press+0x98>
			 {
				 returnval=arr[row][coloumn];
 51a:	e0 2f       	mov	r30, r16
 51c:	f0 e0       	ldi	r31, 0x00	; 0
 51e:	ee 0f       	add	r30, r30
 520:	ff 1f       	adc	r31, r31
 522:	ee 0f       	add	r30, r30
 524:	ff 1f       	adc	r31, r31
 526:	81 e0       	ldi	r24, 0x01	; 1
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	8c 0f       	add	r24, r28
 52c:	9d 1f       	adc	r25, r29
 52e:	e8 0f       	add	r30, r24
 530:	f9 1f       	adc	r31, r25
 532:	e1 0f       	add	r30, r17
 534:	f1 1d       	adc	r31, r1
 536:	f0 80       	ld	r15, Z
				 break;
 538:	03 c0       	rjmp	.+6      	; 0x540 <keypad_u8check_press+0x9e>
		DIO_write(KPD_ROWS_PORT,KPD_ROW2_PIN,DIO_PIN_HIGH);
		DIO_write(KPD_ROWS_PORT,KPD_ROW3_PIN,DIO_PIN_HIGH);
		// INTIRATION FOR ROW CHECK
		DIO_write(KPD_ROWS_PORT,row,DIO_PIN_LOW);
	
		for(coloumn=0;coloumn<=3;coloumn++)
 53a:	1f 5f       	subi	r17, 0xFF	; 255
 53c:	14 30       	cpi	r17, 0x04	; 4
 53e:	30 f3       	brcs	.-52     	; 0x50c <keypad_u8check_press+0x6a>
			 {
				 returnval=arr[row][coloumn];
				 break;
			 }  
		}	
     		if(returnval==PRESSED)
 540:	ff 20       	and	r15, r15
 542:	19 f0       	breq	.+6      	; 0x54a <keypad_u8check_press+0xa8>
{
	 u8 arr[4][4]={{'7','8','9','/'},{'4','5','6','*'},{'1','2','3','-'},{'A','0','=','+'}};
	 u8 row,coloumn;
	// u8 x;
	 u8 returnval=NOTPRESSED;
	 for(row=0;row<=3;row++)
 544:	0f 5f       	subi	r16, 0xFF	; 255
 546:	04 30       	cpi	r16, 0x04	; 4
 548:	30 f2       	brcs	.-116    	; 0x4d6 <keypad_u8check_press+0x34>
	     	 {  // BREAK ROM MAIN FOR LOOP
			break;
		     }
	}	 
	 return returnval ;	 
 54a:	8f 2d       	mov	r24, r15
 54c:	60 96       	adiw	r28, 0x10	; 16
 54e:	0f b6       	in	r0, 0x3f	; 63
 550:	f8 94       	cli
 552:	de bf       	out	0x3e, r29	; 62
 554:	0f be       	out	0x3f, r0	; 63
 556:	cd bf       	out	0x3d, r28	; 61
 558:	df 91       	pop	r29
 55a:	cf 91       	pop	r28
 55c:	1f 91       	pop	r17
 55e:	0f 91       	pop	r16
 560:	ff 90       	pop	r15
 562:	08 95       	ret

00000564 <send_falling_edge>:
}


static void send_falling_edge(void)
{
	DIO_write(Cmd_port,EN,DIO_PIN_HIGH);
 564:	41 e0       	ldi	r20, 0x01	; 1
 566:	60 e0       	ldi	r22, 0x00	; 0
 568:	82 e4       	ldi	r24, 0x42	; 66
 56a:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 56e:	8f e9       	ldi	r24, 0x9F	; 159
 570:	9f e0       	ldi	r25, 0x0F	; 15
 572:	01 97       	sbiw	r24, 0x01	; 1
 574:	f1 f7       	brne	.-4      	; 0x572 <send_falling_edge+0xe>
 576:	00 c0       	rjmp	.+0      	; 0x578 <send_falling_edge+0x14>
 578:	00 00       	nop
	_delay_ms(2);
	DIO_write(Cmd_port,EN,DIO_PIN_LOW);
 57a:	40 e0       	ldi	r20, 0x00	; 0
 57c:	60 e0       	ldi	r22, 0x00	; 0
 57e:	82 e4       	ldi	r24, 0x42	; 66
 580:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
 584:	8f e9       	ldi	r24, 0x9F	; 159
 586:	9f e0       	ldi	r25, 0x0F	; 15
 588:	01 97       	sbiw	r24, 0x01	; 1
 58a:	f1 f7       	brne	.-4      	; 0x588 <send_falling_edge+0x24>
 58c:	00 c0       	rjmp	.+0      	; 0x58e <send_falling_edge+0x2a>
 58e:	00 00       	nop
 590:	08 95       	ret

00000592 <LCD_vSend_cmd>:
	_delay_ms(2);
}
void LCD_vSend_cmd(char cmd)
{
 592:	cf 93       	push	r28
 594:	c8 2f       	mov	r28, r24
	DIO_write_port(Data_port,cmd);
	DIO_write(Cmd_port,RS,Rs_Cmd);
	send_falling_edge();
	
	#elif defined four_bits_mode
	write_high_nibble(Data_port,cmd>>4);
 596:	68 2f       	mov	r22, r24
 598:	62 95       	swap	r22
 59a:	6f 70       	andi	r22, 0x0F	; 15
 59c:	81 e4       	ldi	r24, 0x41	; 65
 59e:	0e 94 ee 01 	call	0x3dc	; 0x3dc <write_high_nibble>
	DIO_write(Cmd_port,RS,Rs_Cmd);
 5a2:	40 e0       	ldi	r20, 0x00	; 0
 5a4:	61 e0       	ldi	r22, 0x01	; 1
 5a6:	82 e4       	ldi	r24, 0x42	; 66
 5a8:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	send_falling_edge();
 5ac:	0e 94 b2 02 	call	0x564	; 0x564 <send_falling_edge>
	write_high_nibble(Data_port,cmd);
 5b0:	6c 2f       	mov	r22, r28
 5b2:	81 e4       	ldi	r24, 0x41	; 65
 5b4:	0e 94 ee 01 	call	0x3dc	; 0x3dc <write_high_nibble>
	DIO_write(Cmd_port,RS,Rs_Cmd);
 5b8:	40 e0       	ldi	r20, 0x00	; 0
 5ba:	61 e0       	ldi	r22, 0x01	; 1
 5bc:	82 e4       	ldi	r24, 0x42	; 66
 5be:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	send_falling_edge();
 5c2:	0e 94 b2 02 	call	0x564	; 0x564 <send_falling_edge>
 5c6:	8f ec       	ldi	r24, 0xCF	; 207
 5c8:	97 e0       	ldi	r25, 0x07	; 7
 5ca:	01 97       	sbiw	r24, 0x01	; 1
 5cc:	f1 f7       	brne	.-4      	; 0x5ca <LCD_vSend_cmd+0x38>
 5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <LCD_vSend_cmd+0x3e>
 5d0:	00 00       	nop
	#endif
	_delay_ms(1);
}
 5d2:	cf 91       	pop	r28
 5d4:	08 95       	ret

000005d6 <LCD_vInit>:
 5d6:	2f ef       	ldi	r18, 0xFF	; 255
 5d8:	81 ee       	ldi	r24, 0xE1	; 225
 5da:	94 e0       	ldi	r25, 0x04	; 4
 5dc:	21 50       	subi	r18, 0x01	; 1
 5de:	80 40       	sbci	r24, 0x00	; 0
 5e0:	90 40       	sbci	r25, 0x00	; 0
 5e2:	e1 f7       	brne	.-8      	; 0x5dc <LCD_vInit+0x6>
 5e4:	00 c0       	rjmp	.+0      	; 0x5e6 <LCD_vInit+0x10>
 5e6:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(ENTRY_MODE); //entry mode
	_delay_ms(1); 
	
	#elif defined four_bits_mode
	DIO_vsetPINDir(Data_port,DIO_PIN4,DIO_PIN_OUTPUT);
 5e8:	41 e0       	ldi	r20, 0x01	; 1
 5ea:	64 e0       	ldi	r22, 0x04	; 4
 5ec:	81 e4       	ldi	r24, 0x41	; 65
 5ee:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir(Data_port,DIO_PIN5,DIO_PIN_OUTPUT);
 5f2:	41 e0       	ldi	r20, 0x01	; 1
 5f4:	65 e0       	ldi	r22, 0x05	; 5
 5f6:	81 e4       	ldi	r24, 0x41	; 65
 5f8:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir(Data_port,DIO_PIN6,DIO_PIN_OUTPUT);
 5fc:	41 e0       	ldi	r20, 0x01	; 1
 5fe:	66 e0       	ldi	r22, 0x06	; 6
 600:	81 e4       	ldi	r24, 0x41	; 65
 602:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir(Data_port,DIO_PIN7,DIO_PIN_OUTPUT);
 606:	41 e0       	ldi	r20, 0x01	; 1
 608:	67 e0       	ldi	r22, 0x07	; 7
 60a:	81 e4       	ldi	r24, 0x41	; 65
 60c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir(Cmd_port,EN,DIO_PIN_OUTPUT);
 610:	41 e0       	ldi	r20, 0x01	; 1
 612:	60 e0       	ldi	r22, 0x00	; 0
 614:	82 e4       	ldi	r24, 0x42	; 66
 616:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir(Cmd_port,RW,DIO_PIN_OUTPUT);
 61a:	41 e0       	ldi	r20, 0x01	; 1
 61c:	62 e0       	ldi	r22, 0x02	; 2
 61e:	82 e4       	ldi	r24, 0x42	; 66
 620:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir(Cmd_port,RS,DIO_PIN_OUTPUT);
 624:	41 e0       	ldi	r20, 0x01	; 1
 626:	61 e0       	ldi	r22, 0x01	; 1
 628:	82 e4       	ldi	r24, 0x42	; 66
 62a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
   	DIO_write(Cmd_port,RW,DIO_PIN_LOW);
 62e:	40 e0       	ldi	r20, 0x00	; 0
 630:	62 e0       	ldi	r22, 0x02	; 2
 632:	82 e4       	ldi	r24, 0x42	; 66
 634:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	LCD_vSend_cmd(RETURN_HOME); //return home
 638:	82 e0       	ldi	r24, 0x02	; 2
 63a:	0e 94 c9 02 	call	0x592	; 0x592 <LCD_vSend_cmd>
 63e:	8f e1       	ldi	r24, 0x1F	; 31
 640:	9e e4       	ldi	r25, 0x4E	; 78
 642:	01 97       	sbiw	r24, 0x01	; 1
 644:	f1 f7       	brne	.-4      	; 0x642 <LCD_vInit+0x6c>
 646:	00 c0       	rjmp	.+0      	; 0x648 <LCD_vInit+0x72>
 648:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(FOUR_BITS); //4bit mode
 64a:	88 e2       	ldi	r24, 0x28	; 40
 64c:	0e 94 c9 02 	call	0x592	; 0x592 <LCD_vSend_cmd>
 650:	8f ec       	ldi	r24, 0xCF	; 207
 652:	97 e0       	ldi	r25, 0x07	; 7
 654:	01 97       	sbiw	r24, 0x01	; 1
 656:	f1 f7       	brne	.-4      	; 0x654 <LCD_vInit+0x7e>
 658:	00 c0       	rjmp	.+0      	; 0x65a <LCD_vInit+0x84>
 65a:	00 00       	nop
	_delay_ms(1);
	LCD_vSend_cmd(CURSOR_ON_DISPLAY_ON);//display on cursor on
 65c:	8e e0       	ldi	r24, 0x0E	; 14
 65e:	0e 94 c9 02 	call	0x592	; 0x592 <LCD_vSend_cmd>
 662:	8f ec       	ldi	r24, 0xCF	; 207
 664:	97 e0       	ldi	r25, 0x07	; 7
 666:	01 97       	sbiw	r24, 0x01	; 1
 668:	f1 f7       	brne	.-4      	; 0x666 <LCD_vInit+0x90>
 66a:	00 c0       	rjmp	.+0      	; 0x66c <LCD_vInit+0x96>
 66c:	00 00       	nop
	_delay_ms(1);
	LCD_vSend_cmd(CLR_SCREEN);//clear the screen
 66e:	81 e0       	ldi	r24, 0x01	; 1
 670:	0e 94 c9 02 	call	0x592	; 0x592 <LCD_vSend_cmd>
 674:	8f e1       	ldi	r24, 0x1F	; 31
 676:	9e e4       	ldi	r25, 0x4E	; 78
 678:	01 97       	sbiw	r24, 0x01	; 1
 67a:	f1 f7       	brne	.-4      	; 0x678 <LCD_vInit+0xa2>
 67c:	00 c0       	rjmp	.+0      	; 0x67e <LCD_vInit+0xa8>
 67e:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(ENTRY_MODE); //entry mode
 680:	86 e0       	ldi	r24, 0x06	; 6
 682:	0e 94 c9 02 	call	0x592	; 0x592 <LCD_vSend_cmd>
 686:	8f ec       	ldi	r24, 0xCF	; 207
 688:	97 e0       	ldi	r25, 0x07	; 7
 68a:	01 97       	sbiw	r24, 0x01	; 1
 68c:	f1 f7       	brne	.-4      	; 0x68a <LCD_vInit+0xb4>
 68e:	00 c0       	rjmp	.+0      	; 0x690 <LCD_vInit+0xba>
 690:	00 00       	nop
 692:	08 95       	ret

00000694 <LCD_vSend_char>:
	#endif
	_delay_ms(1);
}

void LCD_vSend_char(char data)
{
 694:	cf 93       	push	r28
 696:	c8 2f       	mov	r28, r24
	DIO_write_port(Data_port,data);
	DIO_write(Cmd_port,RS,Rs_Data);
	send_falling_edge();
	
	#elif defined four_bits_mode
	write_high_nibble(Data_port,data>>4);
 698:	68 2f       	mov	r22, r24
 69a:	62 95       	swap	r22
 69c:	6f 70       	andi	r22, 0x0F	; 15
 69e:	81 e4       	ldi	r24, 0x41	; 65
 6a0:	0e 94 ee 01 	call	0x3dc	; 0x3dc <write_high_nibble>
	DIO_write(Cmd_port,RS,Rs_Data);
 6a4:	41 e0       	ldi	r20, 0x01	; 1
 6a6:	61 e0       	ldi	r22, 0x01	; 1
 6a8:	82 e4       	ldi	r24, 0x42	; 66
 6aa:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	send_falling_edge();
 6ae:	0e 94 b2 02 	call	0x564	; 0x564 <send_falling_edge>
	write_high_nibble(Data_port,data);
 6b2:	6c 2f       	mov	r22, r28
 6b4:	81 e4       	ldi	r24, 0x41	; 65
 6b6:	0e 94 ee 01 	call	0x3dc	; 0x3dc <write_high_nibble>
	DIO_write(Cmd_port,RS,Rs_Data);
 6ba:	41 e0       	ldi	r20, 0x01	; 1
 6bc:	61 e0       	ldi	r22, 0x01	; 1
 6be:	82 e4       	ldi	r24, 0x42	; 66
 6c0:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	send_falling_edge();
 6c4:	0e 94 b2 02 	call	0x564	; 0x564 <send_falling_edge>
 6c8:	8f ec       	ldi	r24, 0xCF	; 207
 6ca:	97 e0       	ldi	r25, 0x07	; 7
 6cc:	01 97       	sbiw	r24, 0x01	; 1
 6ce:	f1 f7       	brne	.-4      	; 0x6cc <LCD_vSend_char+0x38>
 6d0:	00 c0       	rjmp	.+0      	; 0x6d2 <LCD_vSend_char+0x3e>
 6d2:	00 00       	nop
	#endif
	_delay_ms(1);
}
 6d4:	cf 91       	pop	r28
 6d6:	08 95       	ret

000006d8 <main>:
#include <util/delay.h>
#include "Keypad_driver.h"
#include "LCD.h"
int main(void)
{
   LCD_vInit();
 6d8:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <LCD_vInit>
   keypad_vInit();
 6dc:	0e 94 14 02 	call	0x428	; 0x428 <keypad_vInit>
   char x;
   while(1)
   {
	   x=keypad_u8check_press();
 6e0:	0e 94 51 02 	call	0x4a2	; 0x4a2 <keypad_u8check_press>
	   if (x!=NOTPRESSED)
 6e4:	8f 3f       	cpi	r24, 0xFF	; 255
 6e6:	11 f0       	breq	.+4      	; 0x6ec <main+0x14>
	   {
		   LCD_vSend_char(x);
 6e8:	0e 94 4a 03 	call	0x694	; 0x694 <LCD_vSend_char>
 6ec:	2f e7       	ldi	r18, 0x7F	; 127
 6ee:	8a e1       	ldi	r24, 0x1A	; 26
 6f0:	96 e0       	ldi	r25, 0x06	; 6
 6f2:	21 50       	subi	r18, 0x01	; 1
 6f4:	80 40       	sbci	r24, 0x00	; 0
 6f6:	90 40       	sbci	r25, 0x00	; 0
 6f8:	e1 f7       	brne	.-8      	; 0x6f2 <main+0x1a>
 6fa:	00 c0       	rjmp	.+0      	; 0x6fc <main+0x24>
 6fc:	00 00       	nop
 6fe:	f0 cf       	rjmp	.-32     	; 0x6e0 <main+0x8>

00000700 <_exit>:
 700:	f8 94       	cli

00000702 <__stop_program>:
 702:	ff cf       	rjmp	.-2      	; 0x702 <__stop_program>
